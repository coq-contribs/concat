##########################################################################
##  v      #                  The Coq Proof Assistant                   ##
## <O___,, # CNRS-Ecole Polytechnique-INRIA Futurs-Universite Paris Sud ##
##   \VV/  #                                                            ##
##    //   #   Makefile automagically generated by coq_makefile V8.2    ##
##########################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

#########################
#                       #
# Libraries definition. #
#                       #
#########################

OCAMLLIBS:=
COQLIBS:= -R . ConCaT
COQDOCLIBS:=-R . ConCaT

##########################
#                        #
# Variables definitions. #
#                        #
##########################

CAMLP4LIB:=$(shell $(CAMLBIN)camlp5 -where 2> /dev/null || $(CAMLBIN)camlp4 -where)
CAMLP4:=$(notdir $(CAMLP4LIB))
COQSRC:=-I $(COQTOP)/kernel -I $(COQTOP)/lib \
  -I $(COQTOP)/library -I $(COQTOP)/parsing \
  -I $(COQTOP)/pretyping -I $(COQTOP)/interp \
  -I $(COQTOP)/proofs -I $(COQTOP)/syntax -I $(COQTOP)/tactics \
  -I $(COQTOP)/toplevel -I $(COQTOP)/contrib/correctness \
  -I $(COQTOP)/contrib/extraction -I $(COQTOP)/contrib/field \
  -I $(COQTOP)/contrib/fourier -I $(COQTOP)/contrib/graphs \
  -I $(COQTOP)/contrib/interface -I $(COQTOP)/contrib/jprover \
  -I $(COQTOP)/contrib/omega -I $(COQTOP)/contrib/romega \
  -I $(COQTOP)/contrib/ring -I $(COQTOP)/contrib/xml \
  -I $(CAMLP4LIB)
ZFLAGS:=$(OCAMLLIBS) $(COQSRC)
OPT:=
COQFLAGS:=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
COQC:=$(COQBIN)coqc
COQDEP:=$(COQBIN)coqdep -c
GALLINA:=$(COQBIN)gallina
COQDOC:=$(COQBIN)coqdoc
CAMLC:=$(CAMLBIN)ocamlc -rectypes -c
CAMLOPTC:=$(CAMLBIN)ocamlopt -c
CAMLLINK:=$(CAMLBIN)ocamlc
CAMLOPTLINK:=$(CAMLBIN)ocamlopt
GRAMMARS:=grammar.cma
CAMLP4EXTEND:=pa_extend.cmo pa_macro.cmo q_MLast.cmo
PP:=-pp "$(CAMLBIN)$(CAMLP4)o -I . -I $(COQTOP)/parsing $(CAMLP4EXTEND) $(GRAMMARS) -impl"

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES:=./SETOID/MapProperty.v\
  ./SETOID/Map.v\
  ./SETOID/STRUCTURE/FreeMonoid.v\
  ./SETOID/STRUCTURE/Inverses_Group.v\
  ./SETOID/STRUCTURE/Monoid.v\
  ./SETOID/STRUCTURE/Group.v\
  ./SETOID/Map2.v\
  ./SETOID/Single.v\
  ./SETOID/Setoid_prop.v\
  ./SETOID/BasicTypes.v\
  ./SETOID/Setoid.v\
  ./SETOID/SetoidPROD.v\
  ./CATEGORY_THEORY/NT/Category_dup2.v\
  ./CATEGORY_THEORY/NT/InterChangeLaw.v\
  ./CATEGORY_THEORY/NT/Setoid_dup2.v\
  ./CATEGORY_THEORY/NT/HomFunctor_NT.v\
  ./CATEGORY_THEORY/NT/Ntransformation.v\
  ./CATEGORY_THEORY/NT/NatIso.v\
  ./CATEGORY_THEORY/NT/YONEDA_LEMMA/YonedaEmbedding.v\
  ./CATEGORY_THEORY/NT/YONEDA_LEMMA/Functor_dup1.v\
  ./CATEGORY_THEORY/NT/YONEDA_LEMMA/Map0_dup1.v\
  ./CATEGORY_THEORY/NT/YONEDA_LEMMA/YonedaLemma.v\
  ./CATEGORY_THEORY/NT/CatFunct.v\
  ./CATEGORY_THEORY/CATEGORY/MON.v\
  ./CATEGORY_THEORY/CATEGORY/Dual.v\
  ./CATEGORY_THEORY/CATEGORY/ONE.v\
  ./CATEGORY_THEORY/CATEGORY/FullSubCat.v\
  ./CATEGORY_THEORY/CATEGORY/PROD.v\
  ./CATEGORY_THEORY/CATEGORY/Hom_Equality.v\
  ./CATEGORY_THEORY/CATEGORY/PermCat.v\
  ./CATEGORY_THEORY/CATEGORY/Category.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/Products.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/Pullbacks.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/Exponents.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/Equalizers.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SET_Terminal.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SET_Equalizer.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/CCC.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SET_CCC.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SET_BinProds.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SETProperty.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/Binary_Products.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SET_Pullback.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SET_Exponents.v\
  ./CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/CatProperty.v\
  ./CATEGORY_THEORY/CATEGORY/SET.v\
  ./CATEGORY_THEORY/FUNCTOR/Comma_proj.v\
  ./CATEGORY_THEORY/FUNCTOR/FunForget.v\
  ./CATEGORY_THEORY/FUNCTOR/Functor.v\
  ./CATEGORY_THEORY/FUNCTOR/FunFreeMon.v\
  ./CATEGORY_THEORY/FUNCTOR/Comma.v\
  ./CATEGORY_THEORY/FUNCTOR/HomFunctor.v\
  ./CATEGORY_THEORY/FUNCTOR/Dual_Functor.v\
  ./CATEGORY_THEORY/FUNCTOR/Category_dup1.v\
  ./CATEGORY_THEORY/FUNCTOR/FSC_inc.v\
  ./CATEGORY_THEORY/FUNCTOR/CAT.v\
  ./CATEGORY_THEORY/FUNCTOR/IdCAT.v\
  ./CATEGORY_THEORY/FUNCTOR/PROD_proj.v\
  ./CATEGORY_THEORY/FUNCTOR/Setoid_dup1.v\
  ./CATEGORY_THEORY/FUNCTOR/FunctorProperty.v\
  ./CATEGORY_THEORY/LIMIT_CONSTRUCTIONS/SET_Complete.v\
  ./CATEGORY_THEORY/LIMIT_CONSTRUCTIONS/Pres_Limits.v\
  ./CATEGORY_THEORY/LIMIT_CONSTRUCTIONS/Th_Initial.v\
  ./CATEGORY_THEORY/LIMIT_CONSTRUCTIONS/Comma_Complete.v\
  ./CATEGORY_THEORY/LIMIT_CONSTRUCTIONS/HomFunctor_Continuous.v\
  ./CATEGORY_THEORY/LIMIT_CONSTRUCTIONS/Th_Limits.v\
  ./CATEGORY_THEORY/LIMITS/PULB.v\
  ./CATEGORY_THEORY/LIMITS/Discr.v\
  ./CATEGORY_THEORY/LIMITS/CoUniversalArrow.v\
  ./CATEGORY_THEORY/LIMITS/Pullbacks1.v\
  ./CATEGORY_THEORY/LIMITS/UniversalArrow.v\
  ./CATEGORY_THEORY/LIMITS/Comma_UA.v\
  ./CATEGORY_THEORY/LIMITS/CoLimit.v\
  ./CATEGORY_THEORY/LIMITS/Equalizers1.v\
  ./CATEGORY_THEORY/LIMITS/FunForget_UA.v\
  ./CATEGORY_THEORY/LIMITS/Iso_Limit.v\
  ./CATEGORY_THEORY/LIMITS/Limit.v\
  ./CATEGORY_THEORY/LIMITS/Products1.v\
  ./CATEGORY_THEORY/LIMITS/PA.v\
  ./CATEGORY_THEORY/LIMITS/Const.v\
  ./CATEGORY_THEORY/ADJUNCTION/CCC/Diagonal.v\
  ./CATEGORY_THEORY/ADJUNCTION/CCC/Terminal1.v\
  ./CATEGORY_THEORY/ADJUNCTION/CCC/Cartesian1.v\
  ./CATEGORY_THEORY/ADJUNCTION/CCC/FunProd.v\
  ./CATEGORY_THEORY/ADJUNCTION/CCC/CCC1.v\
  ./CATEGORY_THEORY/ADJUNCTION/CCC/FunOne.v\
  ./CATEGORY_THEORY/ADJUNCTION/LeftAdj_Iso.v\
  ./CATEGORY_THEORY/ADJUNCTION/Limit_Adj.v\
  ./CATEGORY_THEORY/ADJUNCTION/Th_Adjoint.v\
  ./CATEGORY_THEORY/ADJUNCTION/Adjunction1.v\
  ./CATEGORY_THEORY/ADJUNCTION/Adj_UA.v\
  ./CATEGORY_THEORY/ADJUNCTION/Adj_FunFreeMon.v\
  ./CATEGORY_THEORY/ADJUNCTION/FREYD_THEOREM/FAFT_Part2_Proof2.v\
  ./CATEGORY_THEORY/ADJUNCTION/FREYD_THEOREM/FAFT_Part2_Proof1.v\
  ./CATEGORY_THEORY/ADJUNCTION/FREYD_THEOREM/FAFT_Part1.v\
  ./CATEGORY_THEORY/ADJUNCTION/FREYD_THEOREM/FAFT_SSC2.v\
  ./CATEGORY_THEORY/ADJUNCTION/Th_CoAdjoint.v\
  ./CATEGORY_THEORY/ADJUNCTION/Adjunction.v\
  ./CATEGORY_THEORY/ADJUNCTION/HomFunctor2.v\
  ./RELATIONS/Noetherian.v\
  ./RELATIONS/CONFLUENCE/TAIT/Tait.v\
  ./RELATIONS/CONFLUENCE/Coherence.v\
  ./RELATIONS/CONFLUENCE/NEWMAN/Newman.v\
  ./RELATIONS/CONFLUENCE/Confluence.v\
  ./RELATIONS/Relations.v
VOFILES:=$(VFILES:.v=.vo)
GLOBFILES:=$(VFILES:.v=.glob)
VIFILES:=$(VFILES:.v=.vi)
GFILES:=$(VFILES:.v=.g)
HTMLFILES:=$(VFILES:.v=.html)
GHTMLFILES:=$(VFILES:.v=.g.html)

all: $(VOFILES) 
spec: $(VIFILES)

gallina: $(GFILES)

html: $(GLOBFILES) $(VFILES)
	- mkdir html
	$(COQDOC) -toc -html $(COQDOCLIBS) -d html $(VFILES)

gallinahtml: $(GLOBFILES) $(VFILES)
	- mkdir html
	$(COQDOC) -toc -html -g $(COQDOCLIBS) -d html $(VFILES)

all.ps: $(VFILES)
	$(COQDOC) -toc -ps $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -toc -ps -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`



####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend html

%.vo %.glob: %.v
	$(COQC) -dump-glob $*.glob $(COQDEBUG) $(COQFLAGS) $*

%.vi: %.v
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

%.g: %.v
	$(GALLINA) $<

%.tex: %.v
	$(COQDOC) -latex $< -o $@

%.html: %.v %.glob
	$(COQDOC) -glob-from $*.glob  -html $< -o $@

%.g.tex: %.v
	$(COQDOC) -latex -g $< -o $@

%.g.html: %.v %.glob
	$(COQDOC) -glob-from $*.glob -html -g $< -o $@

%.v.d: %.v
	$(COQDEP) -glob -slash $(COQLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

install:
	mkdir -p `$(COQC) -where`/user-contrib
	cp -f $(VOFILES) `$(COQC) -where`/user-contrib

Makefile: Make
	mv -f Makefile Makefile.bak
	$(COQBIN)coq_makefile -f Make -o Makefile


clean:
	rm -f *.cmo *.cmi *.cmx *.o $(VOFILES) $(VIFILES) $(GFILES) *~
	rm -f all.ps all-gal.ps all.glob $(VFILES:.v=.glob) $(HTMLFILES) $(GHTMLFILES) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) $(VFILES:.v=.v.d)
	- rm -rf html

archclean:
	rm -f *.cmx *.o


-include $(VFILES:.v=.v.d)
.SECONDARY: $(VFILES:.v=.v.d)

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

